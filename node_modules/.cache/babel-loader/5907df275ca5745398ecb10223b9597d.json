{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rstrasser\\\\Desktop\\\\My Stuff\\\\Seminars\\\\Sites\\\\fiservseminars\\\\src\\\\containers\\\\VideoPlayer\\\\index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as config from './config'; // Styles\n\nimport './VideoPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VideoPlayer extends Component {\n  constructor() {\n    super();\n\n    this.mediaPlayerScriptLoaded = () => {\n      // This shows how to include the Amazon IVS Player with a script tag from our CDN\n      // If self hosting, you may not be able to use the create() method since it requires\n      // that file names do not change and are all hosted from the same directory.\n      const MediaPlayerPackage = window.IVSPlayer; // First, check if the browser supports the Amazon IVS player.\n\n      if (!MediaPlayerPackage.isPlayerSupported) {\n        console.warn(\"The current browser does not support the Amazon IVS player.\");\n        return;\n      }\n\n      const PlayerState = MediaPlayerPackage.PlayerState;\n      const PlayerEventType = MediaPlayerPackage.PlayerEventType; // Initialize player\n\n      const player = MediaPlayerPackage.create();\n      player.attachHTMLVideoElement(document.getElementById(\"video-player\")); // Attach event listeners\n\n      player.addEventListener(PlayerState.PLAYING, () => {\n        console.log(\"Player State - PLAYING\");\n      });\n      player.addEventListener(PlayerState.ENDED, () => {\n        console.log(\"Player State - ENDED\");\n      });\n      player.addEventListener(PlayerState.READY, () => {\n        console.log(\"Player State - READY\");\n      });\n      player.addEventListener(PlayerEventType.ERROR, err => {\n        console.warn(\"Player Event - ERROR:\", err);\n      });\n      player.addEventListener(PlayerEventType.TEXT_METADATA_CUE, cue => {\n        console.log('Timed metadata: ', cue.text);\n        const metadataText = JSON.parse(cue.text);\n        const productId = metadataText['productId'];\n        this.props.setMetadataId(productId);\n        const metadataTime = player.getPosition().toFixed(2);\n        const {\n          metaData,\n          maxMetaData\n        } = this.state; // only keep max 5 metadata records\n\n        if (metaData.length > maxMetaData) {\n          metaData.length = maxMetaData;\n        } // insert new metadata\n\n\n        metaData.unshift(`productId: ${productId} (${metadataTime}s)`);\n        this.setState({\n          metaData\n        });\n      }); // Setup stream and play\n\n      player.setAutoplay(true);\n      player.load(config.PLAYBACK_URL);\n      player.setVolume(1);\n      player.isMuted(false);\n    };\n\n    this.state = {\n      maxMetaData: 10,\n      metaData: []\n    };\n  }\n\n  componentDidMount() {\n    const mediaPlayerScript = document.createElement(\"script\");\n    mediaPlayerScript.src = \"https://player.live-video.net/1.0.0/amazon-ivs-player.min.js\";\n    mediaPlayerScript.async = true;\n\n    mediaPlayerScript.onload = () => this.mediaPlayerScriptLoaded();\n\n    document.body.appendChild(mediaPlayerScript);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aspect-169 pos-relative full-width full-height\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          id: \"video-player\",\n          className: \"video-elem pos-absolute full-width\",\n          playsInline: true,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\",\n          textAlign: \"center\",\n          fontWeight: \"normal\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            fontWeight: \"normal\"\n          },\n          children: \"**If the video does not start with sound, please hover over the video and make sure the player is not on mute.**\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nVideoPlayer.propTypes = {\n  setMetadataId: PropTypes.func,\n  videoStream: PropTypes.string\n};\nexport default VideoPlayer;","map":{"version":3,"sources":["C:/Users/rstrasser/Desktop/My Stuff/Seminars/Sites/fiservseminars/src/containers/VideoPlayer/index.js"],"names":["React","Component","PropTypes","config","VideoPlayer","constructor","mediaPlayerScriptLoaded","MediaPlayerPackage","window","IVSPlayer","isPlayerSupported","console","warn","PlayerState","PlayerEventType","player","create","attachHTMLVideoElement","document","getElementById","addEventListener","PLAYING","log","ENDED","READY","ERROR","err","TEXT_METADATA_CUE","cue","text","metadataText","JSON","parse","productId","props","setMetadataId","metadataTime","getPosition","toFixed","metaData","maxMetaData","state","length","unshift","setState","setAutoplay","load","PLAYBACK_URL","setVolume","isMuted","componentDidMount","mediaPlayerScript","createElement","src","async","onload","body","appendChild","render","color","textAlign","fontWeight","propTypes","func","videoStream","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as config from './config';\r\n\r\n// Styles\r\nimport './VideoPlayer.css';\r\n\r\nclass VideoPlayer extends Component {\r\n  constructor() {\r\n    super ();\r\n    this.state = {\r\n      maxMetaData: 10,\r\n      metaData: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const mediaPlayerScript = document.createElement(\"script\");\r\n    mediaPlayerScript.src = \"https://player.live-video.net/1.0.0/amazon-ivs-player.min.js\";\r\n    mediaPlayerScript.async = true;\r\n    mediaPlayerScript.onload = () => this.mediaPlayerScriptLoaded();\r\n    document.body.appendChild(mediaPlayerScript);\r\n  }\r\n\r\n  mediaPlayerScriptLoaded = () => {\r\n    // This shows how to include the Amazon IVS Player with a script tag from our CDN\r\n    // If self hosting, you may not be able to use the create() method since it requires\r\n    // that file names do not change and are all hosted from the same directory.\r\n\r\n    const MediaPlayerPackage = window.IVSPlayer;\r\n\r\n    // First, check if the browser supports the Amazon IVS player.\r\n    if (!MediaPlayerPackage.isPlayerSupported) {\r\n        console.warn(\"The current browser does not support the Amazon IVS player.\");\r\n        return;\r\n    }\r\n\r\n    const PlayerState = MediaPlayerPackage.PlayerState;\r\n    const PlayerEventType = MediaPlayerPackage.PlayerEventType;\r\n\r\n    // Initialize player\r\n    const player = MediaPlayerPackage.create();\r\n    player.attachHTMLVideoElement(document.getElementById(\"video-player\"));\r\n\r\n    // Attach event listeners\r\n    player.addEventListener(PlayerState.PLAYING, () => {\r\n        console.log(\"Player State - PLAYING\");\r\n    });\r\n    player.addEventListener(PlayerState.ENDED, () => {\r\n        console.log(\"Player State - ENDED\");\r\n    });\r\n    player.addEventListener(PlayerState.READY, () => {\r\n        console.log(\"Player State - READY\");\r\n    });\r\n    player.addEventListener(PlayerEventType.ERROR, (err) => {\r\n        console.warn(\"Player Event - ERROR:\", err);\r\n    });\r\n    player.addEventListener(PlayerEventType.TEXT_METADATA_CUE, (cue) => {\r\n        console.log('Timed metadata: ', cue.text);\r\n        const metadataText = JSON.parse(cue.text);\r\n        const productId = metadataText['productId'];\r\n        this.props.setMetadataId(productId);\r\n        const metadataTime = player.getPosition().toFixed(2);\r\n\r\n        const { metaData, maxMetaData } = this.state;\r\n        // only keep max 5 metadata records\r\n        if (metaData.length > maxMetaData) {\r\n          metaData.length = maxMetaData;\r\n        }\r\n        // insert new metadata\r\n        metaData.unshift(`productId: ${productId} (${metadataTime}s)`);\r\n        this.setState({ metaData });\r\n    });\r\n\r\n    // Setup stream and play\r\n    player.setAutoplay(true);\r\n    player.load(config.PLAYBACK_URL);\r\n    player.setVolume(1);\r\n    player.isMuted(false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"player-wrapper\">\r\n        <header>\r\n          <h1>Video</h1>\r\n        </header>\r\n        <div className=\"aspect-169 pos-relative full-width full-height\">\r\n          <video id=\"video-player\" className=\"video-elem pos-absolute full-width\" playsInline controls></video>\r\n        </div>\r\n        <div style={{color: \"red\", textAlign: \"center\", fontWeight: \"normal\"}}>\r\n          <h3 style={{fontWeight: \"normal\"}}>\r\n            **If the video does not start with sound, please hover over the video and make sure the player is not on mute.**\r\n          </h3>\r\n        </div>\r\n        {/* <div>\r\n          <p>\r\n            <a href=\"https://fiserventerprise.webex.com/mw3300/mywebex/default.do?service=7&main_url=%2Ftc3300%2Ftrainingcenter%2Fdefault.do%3Fsiteurl%3Dfiserventerprise%26main_url%3D%252Ftc3300%252Fe.do%253FAT%253DMI%2526%2526Host%253DQUhTSwAAAAQbxkPVmUX6Cad4NxJtiy7VM2t75OzSFPbz-AoFLzGfuVNYkI6GqsnVvoRkkUzgQpaUQrySWVax9dGu_LI31jG70%2526MTID%253Dt8bc9464659df8ec268e1a7e1b60e93a8%2526siteurl%253Dfiserventerprise%2526confID%253D175196850667701805%2526ticket%253D4832534b000000041b9ced8dd4f033a3585702ba74ef1a14e5c5c076491882bab457073adb049010&siteurl=fiserventerprise\" target=\"_blank\">Loan Networking</a><br/>\r\n            Session number: <b>131 905 3379</b><br/> \r\n            Session password: <b>DpJP9xr4Z$4</b>\r\n          </p>\r\n          <p>\r\n            <a href=\"https://urldefense.proofpoint.com/v2/url?u=https-3A__fiserventerprise.webex.com_fiserventerprise_k2_j.php-3FMTID-3Dt585692a0bd54f67cf444aa828f3c6fd0&d=DwMGaQ&c=rE3mhBYFJfJGqQ7WI0-DPw&r=lD_m483ZNdrPoub1glQ0NI-p62b7YfEyJ2JEVPaf7E0&m=fmpsenbnbwpVk92WgE9N9f_lzTN3jbWggZBNn8Z1pcc&s=Lnj1Tazi_WYM6UPKROAZUxLr1UrPTO88xMbhXJ81_y8&e=\" target=\"_blank\">Deposit Networking</a><br/>\r\n            Session number: <b>131 637 6333</b><br/>\r\n            Session password: <b>mMchNm5e8@7</b> \r\n          </p>\r\n          <p>\r\n            <a href=\"https://urldefense.proofpoint.com/v2/url?u=https-3A__fiserventerprise.webex.com_fiserventerprise_k2_j.php-3FMTID-3Dt765233fbad9e7c2980879104e27774e7&d=DwMGaQ&c=rE3mhBYFJfJGqQ7WI0-DPw&r=lD_m483ZNdrPoub1glQ0NI-p62b7YfEyJ2JEVPaf7E0&m=D2orwhevfAOW3IfZo9eL8Y0CjQQEAT9FqSrA-n8uvtY&s=TWptvEoJRx-whs0-krb8g0Chk0KVlnbNcwIGYxhiUXo&e=\" target=\"_blank\">BPM Networking</a><br/>\r\n            Session number: <b>131 709 2026</b><br/>\r\n            Session password: <b>PqJyefi7?69</b>\r\n          </p>\r\n        </div> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nVideoPlayer.propTypes = {\r\n  setMetadataId: PropTypes.func,\r\n  videoStream: PropTypes.string,\r\n};\r\n\r\nexport default VideoPlayer;"]},"metadata":{},"sourceType":"module"}