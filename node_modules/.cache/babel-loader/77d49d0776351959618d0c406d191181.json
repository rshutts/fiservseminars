{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rstrasser\\\\Desktop\\\\My Stuff\\\\Seminars\\\\Sites\\\\fiservseminars\\\\src\\\\containers\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { Link } from \"react-router-dom\";\nimport { FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n\n  const [fields, handleFieldChange] = useFormFields({\n    code: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [codeSent, setCodeSent] = useState(false);\n  const [confirmed, setConfirmed] = useState(false);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [isSendingCode, setIsSendingCode] = useState(false);\n\n  function validateCodeForm() {\n    return fields.email.length > 0;\n  }\n\n  function validateResetForm() {\n    return fields.code.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword;\n  }\n\n  async function handleSendCodeClick(event) {\n    event.preventDefault();\n    setIsSendingCode(true);\n\n    try {\n      await Auth.forgotPassword(fields.email);\n      setCodeSent(true);\n    } catch (error) {\n      onError(error);\n      setIsSendingCode(false);\n    }\n  }\n\n  async function handleConfirmClick(event) {\n    event.preventDefault();\n    setIsConfirming(true);\n\n    try {\n      await Auth.forgotPasswordSubmit(fields.email, fields.code, fields.password);\n      setConfirmed(true);\n    } catch (error) {\n      onError(error);\n      setIsConfirming(false);\n    }\n  }\n\n  function renderRequestCodeForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendCodeClick,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        bsSize: \"large\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          autoFocus: true,\n          type: \"email\",\n          value: fields.email,\n          onChange: handleFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoaderButton, {\n        block: true,\n        type: \"submit\",\n        bsSize: \"large\",\n        isLoading: isSendingCode,\n        disabled: !validateCodeForm(),\n        children: \"Send Confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  function renderConfirmationForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleConfirmClick,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        bsSize: \"large\",\n        controlId: \"code\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Confirmation Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          autoFocus: true,\n          type: \"tel\",\n          value: fields.code,\n          onChange: handleFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        bsSize: \"large\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"password\",\n          value: fields.password,\n          onChange: handleFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        bsSize: \"large\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"password\",\n          value: fields.confirmPassword,\n          onChange: handleFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoaderButton, {\n        block: true,\n        type: \"submit\",\n        bsSize: \"large\",\n        isLoading: isConfirming,\n        disabled: !validateResetForm(),\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n  function renderSuccessMessage() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your password has been reset.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Click here to login with your new credentials.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ResetPassword\",\n    children: !codeSent ? renderRequestCodeForm() : !confirmed ? renderConfirmationForm() : renderSuccessMessage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResetPassword, \"djJdD46dgv+wVokdvHLmQKNkzHA=\", false, function () {\n  return [useFormFields];\n});\n\n_c = ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/rstrasser/Desktop/My Stuff/Seminars/Sites/fiservseminars/src/containers/ResetPassword.js"],"names":["React","useState","Auth","Link","FormGroup","FormControl","FormLabel","LoaderButton","useFormFields","onError","ResetPassword","fields","handleFieldChange","code","email","password","confirmPassword","codeSent","setCodeSent","confirmed","setConfirmed","isConfirming","setIsConfirming","isSendingCode","setIsSendingCode","validateCodeForm","length","validateResetForm","handleSendCodeClick","event","preventDefault","forgotPassword","error","handleConfirmClick","forgotPasswordSubmit","renderRequestCodeForm","renderConfirmationForm","renderSuccessMessage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  FormLabel,\r\n} from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport { useFormFields } from \"../libs/hooksLib\";\r\nimport { onError } from \"../libs/errorLib\";\r\n\r\nexport default function ResetPassword() {\r\n  const [fields, handleFieldChange] = useFormFields({\r\n    code: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [codeSent, setCodeSent] = useState(false);\r\n  const [confirmed, setConfirmed] = useState(false);\r\n  const [isConfirming, setIsConfirming] = useState(false);\r\n  const [isSendingCode, setIsSendingCode] = useState(false);\r\n\r\n  function validateCodeForm() {\r\n    return fields.email.length > 0;\r\n  }\r\n\r\n  function validateResetForm() {\r\n    return (\r\n      fields.code.length > 0 &&\r\n      fields.password.length > 0 &&\r\n      fields.password === fields.confirmPassword\r\n    );\r\n  }\r\n\r\n  async function handleSendCodeClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsSendingCode(true);\r\n\r\n    try {\r\n      await Auth.forgotPassword(fields.email);\r\n      setCodeSent(true);\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsSendingCode(false);\r\n    }\r\n  }\r\n\r\n  async function handleConfirmClick(event) {\r\n    event.preventDefault();\r\n\r\n    setIsConfirming(true);\r\n\r\n    try {\r\n      await Auth.forgotPasswordSubmit(\r\n        fields.email,\r\n        fields.code,\r\n        fields.password\r\n      );\r\n      setConfirmed(true);\r\n    } catch (error) {\r\n      onError(error);\r\n      setIsConfirming(false);\r\n    }\r\n  }\r\n\r\n  function renderRequestCodeForm() {\r\n    return (\r\n      <form onSubmit={handleSendCodeClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"email\">\r\n          <FormLabel>Email</FormLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={fields.email}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isSendingCode}\r\n          disabled={!validateCodeForm()}\r\n        >\r\n          Send Confirmation\r\n        </LoaderButton>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  function renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={handleConfirmClick}>\r\n        <FormGroup bsSize=\"large\" controlId=\"code\">\r\n          <FormLabel>Confirmation Code</FormLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            value={fields.code}\r\n            onChange={handleFieldChange}\r\n          />\r\n          {/* <HelpBlock>\r\n            Please check your email ({fields.email}) for the confirmation code.\r\n          </HelpBlock> */}\r\n        </FormGroup>\r\n        <hr />\r\n        <FormGroup bsSize=\"large\" controlId=\"password\">\r\n          <FormLabel>New Password</FormLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.password}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup bsSize=\"large\" controlId=\"confirmPassword\">\r\n          <FormLabel>Confirm Password</FormLabel>\r\n          <FormControl\r\n            type=\"password\"\r\n            value={fields.confirmPassword}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          type=\"submit\"\r\n          bsSize=\"large\"\r\n          isLoading={isConfirming}\r\n          disabled={!validateResetForm()}\r\n        >\r\n          Confirm\r\n        </LoaderButton>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  function renderSuccessMessage() {\r\n    return (\r\n      <div className=\"success\">\r\n        \r\n        <p>Your password has been reset.</p>\r\n        <p>\r\n          <Link to=\"/login\">\r\n            Click here to login with your new credentials.\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ResetPassword\">\r\n      {!codeSent\r\n        ? renderRequestCodeForm()\r\n        : !confirmed\r\n        ? renderConfirmationForm()\r\n        : renderSuccessMessage()}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}