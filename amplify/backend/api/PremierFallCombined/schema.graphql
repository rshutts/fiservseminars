type Poll @model
  @key(name: "byItemType", fields: ["itemType", "createdAt"], queryField: "itemsByType"){
  id: ID!
  name: String!
  type: PollType!
  candidates: [Candidate] @connection
  itemType: String
  createdAt: String
  owner: String
}

type Candidate @model
  @key(name: "byCandidateName", fields: ["name", "candidateType"], queryField: "candidatesByName"){
  id: ID!
  pollCandidatesId: ID
  candidateType: String!
  name: String!
  upvotes: Int
  owner: String
}

enum PollType {
  image
  text
}

type VoteType {
	id: ID
  clientId: ID
}

type Mutation {
  upVote(id: ID, clientId: ID): VoteType
}

type Subscription {
  onUpdateByID(id: ID!): VoteType
    @aws_subscribe(mutations: ["upVote"])
}

type Message
  @model
  @key(name: "byChannelID", fields: ["channelID", "createdAt"], queryField: "messagesByChannelID")
  @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  channelID: ID!
  author: String!
  body: String!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Quiz @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  title: String!
  seconds: Int!
  currentQuestion: String
  questionOrder: String
  started: Boolean
  questionTime: Int
  view: Int
  owner: String!
}

type Questions @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  question: String!
  answerOne: String
  answerOneCorrect: Boolean
  answerTwo: String
  answerTwoCorrect: Boolean
  answerThree: String
  answerThreeCorrect: Boolean
  answerFour: String
  answerFourCorrect: Boolean
  quizID: String!
  order: Int
  public: Boolean
}

type QuestionsDB @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  question: String!
  answerOne: String
  answerOneCorrect: Boolean
  answerTwo: String
  answerTwoCorrect: Boolean
  answerThree: String
  answerThreeCorrect: Boolean
  answerFour: String
  answerFourCorrect: Boolean
  relatedQuestion: String!
  public: Boolean
  category: String

}

type Subscribers @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  type: String!
  score: Int!
  quizID: String!
  name: String!
}

type Responses @model @auth(rules: [{ allow: public, provider: apiKey }]) {
  id: ID!
  quiz: String!
  subscriber: String!
  question: String!
}